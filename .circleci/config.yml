# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
   # Exercise - Rollback
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID
           when: on_fail 
           command: |
             aws cloudformation delete-stack --stack-name circleciInfra-${CIRCLE_WORKFLOW_ID:0:5}


jobs:
  create-infrastructure:
    docker:
      - image: amazon/aws-cli
    # Add steps to the job
    steps:
      - checkout
      - run:
          name: "name: Create Cloudformation Stack"
          command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name circleciInfra-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1
 

   # Exercise: Config and Deployment
  
  configure_infrastructure: 
    docker:
      - image: python:3.8-alpine3.16
    steps:
      - checkout
      - add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
              fingerprints: ["1b:70:a3:ff:52:9a:6b:a0:bd:31:e2:9f:9d:67:db:b7"] 
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      # - run:
      #     name: Install dependencies (openssh)
      #     command: |
      #       apk add --update openssh-server # Install openssh-server
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory main-remote.yml

  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            #URL="https://blog.udacity..com/" #fail
            URL="https://blog.udacity.com/" #pass
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi

  smoke-test:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: test-fail
          # Fail the job intentionally to simulate an error.
          command:  return 1
      - destroy_environment

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows

workflows:
  buildInfra-workflow:
    jobs:
      - create-infrastructure
      - smoke-test:
          requires:
            - create-infrastructure


